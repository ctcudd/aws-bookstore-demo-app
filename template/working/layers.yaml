AWSTemplateFormatVersion: 2010-09-09
Mappings:
  S3Buckets:
    us-east-1:
      Bucket: aws-bookstore-demo
      ConfigBucket: ee-assets-prod-us-east-1
    us-west-2:
      Bucket: aws-bookstore-demo-us-west-2
      ConfigBucket: ee-assets-prod-us-west-2
    eu-central-1:
      Bucket: aws-bookstore-demo-eu-central-1
      ConfigBucket: ee-assets-prod-us-west-2
    eu-west-1:
      Bucket: aws-bookstore-demo-eu-west-1
      ConfigBucket: ee-assets-prod-us-west-2
  Constants:
    S3Keys:
      CollectorConfigLayer: modules/09f302bc1c3b49efa121cb0cc01302d3/v1/layers/collector-config.zip
      PythonLambdaLayer: functions/PythonLambdaLayer.zip
      nodeXraySdk: modules/09f302bc1c3b49efa121cb0cc01302d3/v1/layers/node-aws-xray-sdk.zip
      pythonXraySdk: modules/09f302bc1c3b49efa121cb0cc01302d3/v1/layers/python-aws-xray-sdk.zip
      pythonGremlin: modules/09f302bc1c3b49efa121cb0cc01302d3/v1/layers/python-gremlinpython.zip
      nodeRedis: modules/09f302bc1c3b49efa121cb0cc01302d3/v1/layers/node-redis.zip

Resources:
# ---------- LAMBDA LAYERS ---------
  NodeRedisLayer:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes:
        - nodejs12.x
        - nodejs14.x
      Content:
        S3Bucket: !FindInMap
          - S3Buckets
          - !Ref 'AWS::Region'
          - ConfigBucket
        S3Key: !FindInMap
          - Constants
          - S3Keys
          - nodeRedis
  PythonGremlinLayer:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes:
        - python3.8
        - python3.7
        - python3.6
      Content:
        S3Bucket: !FindInMap
          - S3Buckets
          - !Ref 'AWS::Region'
          - ConfigBucket
        S3Key: !FindInMap
          - Constants
          - S3Keys
          - pythonGremlin
  NodeXrayLayer:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes:
        - nodejs12.x
        - nodejs14.x
      Content:
        S3Bucket: !FindInMap
          - S3Buckets
          - !Ref 'AWS::Region'
          - ConfigBucket
        S3Key: !FindInMap
          - Constants
          - S3Keys
          - nodeXraySdk
  PythonXrayLayer:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes:
        - python3.8
        - python3.7
        - python3.6
      Content:
        S3Bucket: !FindInMap
          - S3Buckets
          - !Ref 'AWS::Region'
          - ConfigBucket
        S3Key: !FindInMap
          - Constants
          - S3Keys
          - pythonXraySdk
  CollectorConfigLayer:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes:
        - python3.8
        - python3.7
        - python3.6
        - python2.7
        - nodejs12.x
        - nodejs14.x
        - java8
      Content:
        S3Bucket: !FindInMap
          - S3Buckets
          - !Ref 'AWS::Region'
          - ConfigBucket
        S3Key: !FindInMap
          - Constants
          - S3Keys
          - CollectorConfigLayer
  PythonLambdaLayer:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes:
        - python3.8
        - python3.7
        - python3.6
      Content:
        S3Bucket: !FindInMap
          - S3Buckets
          - !Ref 'AWS::Region'
          - Bucket
        S3Key: !FindInMap
          - Constants
          - S3Keys
          - PythonLambdaLayer 

Outputs:
  StackName:
    Value: !Ref AWS::StackName
    Export:
      Name: !Sub ${AWS::StackName}-StackName
  CollectorConfigLayer:
    Value: !Ref CollectorConfigLayer
    Export:
      Name: !Sub ${AWS::StackName}-CollectorConfigLayer
  PythonLambdaLayer:
    Value: !Ref PythonLambdaLayer
    Export:
      Name: !Sub ${AWS::StackName}-PythonLambdaLayer
  PythonXrayLayer:
    Value: !Ref PythonXrayLayer
    Export:
      Name: !Sub ${AWS::StackName}-PythonXrayLayer
  NodeXrayLayer:
    Value: !Ref NodeXrayLayer
    Export:
      Name: !Sub ${AWS::StackName}-NodeXrayLayer
  PythonGremlinLayer:
    Value: !Ref PythonGremlinLayer
    Export:
      Name: !Sub ${AWS::StackName}-PythonGremlinLayer
  NodeRedisLayer:
    Value: !Ref NodeRedisLayer
    Export:
      Name: !Sub ${AWS::StackName}-NodeRedisLayer
