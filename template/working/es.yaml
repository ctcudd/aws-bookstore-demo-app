AWSTemplateFormatVersion: 2010-09-09
Parameters:
  NetworkStackName:
    Description: Used as a prefix for project resources.  Can be up to 12 characters, lowercase letters (a-z) only.
    Type: String

Mappings:
  S3Buckets:
    us-east-1:
      Bucket: aws-bookstore-demo
    us-west-2:
      Bucket: aws-bookstore-demo-us-west-2
    eu-central-1:
      Bucket: aws-bookstore-demo-eu-central-1
    eu-west-1:
      Bucket: aws-bookstore-demo-eu-west-1
  Constants:
    S3Keys:
      CreateESRoleCode: functions/CreateESRole.zip

Resources:
  ElasticsearchSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Rules for allowing access to the ES cluster
      VpcId: !ImportValue {"Fn::Sub": "${NetworkStackName}-VPCID"}
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !ImportValue {"Fn::Sub": "${NetworkStackName}-VPCCIDRBlock"}

  ElasticsearchDomain:
    Type: 'AWS::Elasticsearch::Domain'
    DependsOn:
      - ESRoleCreator
    Properties:
      DomainName: !Join ["",[!ImportValue {"Fn::Sub": "${NetworkStackName}-ProjectName"}, "-domain"]]
      ElasticsearchVersion: '7.10'
      ElasticsearchClusterConfig:
        DedicatedMasterEnabled: 'false'
        InstanceCount: '1'
        ZoneAwarenessEnabled: 'false'
        InstanceType: t3.medium.elasticsearch
      VPCOptions:
        SubnetIds:
          - !ImportValue {"Fn::Sub": "${NetworkStackName}-PrivateSubnet1"}
        SecurityGroupIds:
          - !Ref ElasticsearchSecurityGroup
      EBSOptions:
        EBSEnabled: true
        Iops: 0
        VolumeSize: 10
        VolumeType: gp2
      AccessPolicies:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action:
              - 'es:*'
            Resource: !Join
              - ''
              - - 'arn:aws:es:'
                - !Ref 'AWS::Region'
                - ':'
                - !Ref 'AWS::AccountId'
                - ':'
                - domain/
                - !ImportValue {"Fn::Sub": "${NetworkStackName}-ProjectName"}
                - '-domain'
                - /*
      AdvancedOptions:
        rest.action.multi.allow_explicit_index: true
  CreateESRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Join ["",[!ImportValue {"Fn::Sub": "${NetworkStackName}-ProjectName"},"-CreateESRole"]]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: CreateRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'iam:CreateServiceLinkedRole'
                Resource: 'arn:aws:iam::*:role/aws-service-role/es.amazonaws.com/AWSServiceRoleForAmazonElasticsearchService'

  CreateESRoleFunction:
    Properties:
      Code:
        S3Bucket: !FindInMap
          - S3Buckets
          - !Ref 'AWS::Region'
          - Bucket
        S3Key: !FindInMap
          - Constants
          - S3Keys
          - CreateESRoleCode
      Description: Create Elasticsearch role
      Handler: index.handler
      Role:
        'Fn::GetAtt':
          - CreateESRole
          - Arn
      Runtime: nodejs10.x
      Timeout: 300
    Type: 'AWS::Lambda::Function'
  ESRoleCreator:
    Type: 'Custom::CustomResource'
    Properties:
      ServiceToken: !GetAtt CreateESRoleFunction.Arn
      ParameterOne: Parameter to pass into Custom Lambda Function
      DependsOn: CreateESRoleFunction

Outputs:
  Domain:
    Value: !Ref ElasticsearchDomain
    Export:
      Name: !Sub ${AWS::StackName}-Domain
  DomainArn:
    Value: !GetAtt ElasticsearchDomain.DomainArn
    Export:
      Name: !Sub ${AWS::StackName}-DomainArn
  DomainEndpiont:
    Value: !GetAtt ElasticsearchDomain.DomainEndpoint
    Export:
      Name: !Sub ${AWS::StackName}-DomainEndpoint
